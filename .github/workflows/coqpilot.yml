name: Build and Test

on: 
  push:
    branches: [ main, tests-refactor ]
  pull_request:
    branches: [ main ]
env: 
  coqlsppath: "coq-lsp"

jobs:
  build: 
    strategy:
      matrix:
        os: [ubuntu-latest]
        ocaml-compiler:
          - "4.14"
    runs-on: ${{ matrix.os }}
    outputs:
      vsixPath: ${{ steps.packageExtension.outputs.vsixPath }}
    steps:
    - name: Checkout tree
      uses: actions/checkout@v4

    - name: Set-up OCaml ${{ matrix.ocaml-compiler }}
      uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}
        
    - name: Install opam dependencies
      env:
          OPAMYES: true
      run: |
        opam install coq-lsp.0.1.8+8.19
        eval $(opam env)
    
    - name: Opam eval 
      run: eval $(opam env)

    - name: Make coq project from test resources directory
      run: |
        cd src/test/resources/coqProj
        make
      shell: bash

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - run: npm ci

    - name: Check coq-lsp version
      env:
          OPAMYES: true
      run: |
        opam list coq-lsp
        eval $(opam env)
        which coq-lsp
      
    - name: Check if coq-lsp is in PATH 
      run: |
        eval $(opam env)
        if ! command -v coq-lsp &> /dev/null
        then
            echo "coq-lsp could not be found"
        fi
        echo "coqlsppath=`which coq-lsp`" >> $GITHUB_ENV
      shell: bash

    - name: Test on Linux
      env:
          COQ_LSP_PATH: ${{ env.coqlsppath }}
      run: xvfb-run -a npm test
      if: runner.os == 'Linux'

    - name: Test not on Linux
      env:
          COQ_LSP_PATH: ${{ env.coqlsppath }}
      run: npm test
      if: runner.os != 'Linux'

    - name: Package Extension
      id: packageExtension
      uses: HaaLeo/publish-vscode-extension@v1
      with:
        pat: stub
        dryRun: true

    - name: Upload Extension Package as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}
        path: ${{ steps.packageExtension.outputs.vsixPath }}

  create-release:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install Dependencies
        run: npm ci
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest
      - name: Publish to Visual Studio Marketplace
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: ${{ secrets.VSCE_ACCESS_TOKEN }}
          extensionFile: ${{ needs.build.outputs.vsixPath }}
          registryUrl: https://marketplace.visualstudio.com